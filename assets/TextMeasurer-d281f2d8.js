import{j as e}from"./Grow-ce4b08a7.js";import{r as g,i as v,L as f}from"./LoadingButton-e03359d9.js";import{C as j,G as t,T as l,a as s}from"./TextField-0bb695ab.js";var a={},y=v;Object.defineProperty(a,"__esModule",{value:!0});var d=a.default=void 0,_=y(g()),T=e,V=(0,_.default)((0,T.jsx)("path",{d:"M21 6H3c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H3V8h2v4h2V8h2v4h2V8h2v4h2V8h2v4h2V8h2v8z"}),"Straighten");d=a.default=V;const u=({text:r,cssFontString:o,measurementResult:c,onMeasureClicked:p,onTextChanged:x,isLoading:i})=>{const m=n=>{x(n.target.value)},h=n=>{p(n)};return e.jsx(j,{children:e.jsxs(t,{container:!0,spacing:2,direction:"column",padding:1,children:[e.jsx(t,{children:e.jsx(l,{textAlign:"center",variant:"h6",children:"Text"})}),e.jsx(t,{children:e.jsx(s,{label:"Text to measure:",value:r,variant:"outlined",onChange:m})}),e.jsxs(t,{children:[e.jsx(l,{textAlign:"center",variant:"subtitle1",children:"Text preview:"}),e.jsx("span",{style:{display:"block",textAlign:"center",font:o},children:r})]}),e.jsx(t,{children:e.jsx(s,{label:"Measurement result:",value:c??"",variant:"outlined",InputProps:{readOnly:!0}})}),e.jsx(t,{display:"flex",justifyContent:"center",alignItems:"center",children:e.jsx(f,{variant:"contained",onClick:()=>h(r),loading:i,loadingPosition:"start",startIcon:e.jsx(d,{}),children:i?"Measuring...":"Measure"})})]})})};try{u.displayName="TextMeasurer",u.__docgenInfo={description:"",displayName:"TextMeasurer",props:{text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},cssFontString:{defaultValue:null,description:"",name:"cssFontString",required:!0,type:{name:"string"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},measurementResult:{defaultValue:null,description:"",name:"measurementResult",required:!0,type:{name:"number | null"}},onMeasureClicked:{defaultValue:null,description:"",name:"onMeasureClicked",required:!0,type:{name:"(text: string) => void"}},onTextChanged:{defaultValue:null,description:"",name:"onTextChanged",required:!0,type:{name:"(text: string) => void"}}}}}catch{}export{u as T};
//# sourceMappingURL=TextMeasurer-d281f2d8.js.map
