{"version":3,"file":"FontInput-a175b9ef.js","sources":["../../src/fonts/predefinedFonts.ts","../../src/core/utils/strings.ts","../../src/fonts/constants.ts","../../src/fonts/utils.ts","../../node_modules/@mui/material/Divider/dividerClasses.js","../../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../../node_modules/@mui/material/MenuItem/menuItemClasses.js","../../node_modules/@mui/material/MenuItem/MenuItem.js","../../src/fonts/components/FontInput.tsx"],"sourcesContent":["import predefinedFonts from './predefinedFonts.json';\nimport { PredefinedFont } from './types';\n\nexport const PREDEFINED_FONTS = predefinedFonts as PredefinedFont[];\n","/**\n * According to copilot, this is a good enough way to hash a string that is also compatible with web workers.\n */\nexport function hashString(str: string): string {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash.toString();\n}\n","export const DEFAULT_FONT_SIZE = 14 as const;\n","import { hashString } from '../core/utils/strings';\n\nimport { DEFAULT_FONT_SIZE } from './constants';\nimport { PredefinedFont, FontRegistrationData } from './types';\n\nexport function buildCssStringForFont(\n  fontName: string,\n  isBold: boolean,\n  isItalic: boolean,\n  fontSize: number = DEFAULT_FONT_SIZE,\n) {\n  let fontString = '';\n\n  if (isBold) {\n    fontString += 'bold ';\n  }\n\n  if (isItalic) {\n    fontString += 'italic ';\n  }\n\n  fontString += `${fontSize}px \"${fontName}\"`;\n\n  return fontString;\n}\n\nexport function buildCssStringForFontWithoutSize(\n  fontName: string,\n  isBold: boolean,\n  isItalic: boolean,\n) {\n  let fontString = '';\n\n  if (isBold) {\n    fontString += 'bold ';\n  }\n\n  if (isItalic) {\n    fontString += 'italic ';\n  }\n\n  fontString += `\"${fontName}\"`;\n\n  return fontString;\n}\n\nexport function convertPredefinedFontToFontRegistrationData(\n  predefinedFont: PredefinedFont,\n): FontRegistrationData {\n  return {\n    font: predefinedFont.name,\n    displayName: predefinedFont.display,\n    url: predefinedFont.url,\n    isBold: predefinedFont.bold,\n    isItalic: predefinedFont.italic,\n    isCustom: false,\n  };\n}\n\nexport function buildFontMetadata(isBold: boolean, isItalic: boolean) {\n  const weight = isBold ? 'bold' : 'normal';\n  const style = isItalic ? 'italic' : 'normal';\n\n  return {\n    weight,\n    style,\n  };\n}\n\nexport function buildFontFace(\n  font: string,\n  url: string,\n  isBold: boolean,\n  isItalic: boolean,\n) {\n  const metadata = buildFontMetadata(isBold, isItalic);\n  return new FontFace(font, `url(${url})`, metadata);\n}\n\nexport function generateIdForFontRegistrationData(\n  fontRegistrationData: Omit<\n    FontRegistrationData,\n    'isCustom' | 'displayName'\n  > & {\n    displayName?: string;\n  },\n) {\n  const { font, displayName, isBold, isItalic, url } = fontRegistrationData;\n  const weight = isBold ? 'bold' : 'normal';\n  const style = isItalic ? 'italic' : 'normal';\n  // We hash the display name to be compatible with storybook Controls and URL params\n  const hashedDisplayName = displayName ? `-${hashString(displayName)}` : '';\n\n  return `${font}-${weight}-${style}-${url.length}${hashedDisplayName}`;\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import React, { useCallback, useMemo } from 'react';\n\nimport Card from '@mui/material/Card';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Unstable_Grid2'; // Grid version 2\n\nimport { RegisteredFontData } from '../types';\n\nconst TEST_IDS = {\n  FONT_LIST: 'font-input-list',\n  FONT_LIST_LABEL: 'font-input-list-label',\n  FONT_SIZE_INPUT: 'font-input-size',\n  FONT_SIZE_INPUT_LABEL: 'font-input-size-label',\n};\n\ninterface FontInputProps {\n  fonts: RegisteredFontData[];\n  selectedFont?: RegisteredFontData;\n  fontSize: number;\n  onFontSizeChanged?: (fontSize: number) => void;\n  onFontSelected?: (font: RegisteredFontData) => void;\n}\n\nexport const FontInput: React.FC<FontInputProps> = ({\n  fonts,\n  selectedFont,\n  onFontSelected,\n  fontSize,\n  onFontSizeChanged,\n}) => {\n  const currentFontsById = useMemo(() => {\n    return fonts.reduce(\n      (acc, font) => {\n        acc[font.id] = font;\n        return acc;\n      },\n      {} as Record<string, RegisteredFontData>,\n    );\n  }, [fonts]);\n\n  const [currentFont, setCurrentFont] = React.useState<\n    RegisteredFontData | undefined\n  >(selectedFont);\n\n  const handleFontSelected = useCallback(\n    (event: SelectChangeEvent) => {\n      const fontId = event.target.value;\n      const font = currentFontsById[fontId];\n\n      if (font) {\n        setCurrentFont(font);\n        onFontSelected?.(font);\n      }\n    },\n    [currentFontsById, onFontSelected],\n  );\n\n  const handleFontSizeChanged = (\n    event: React.ChangeEvent<{ value: unknown }>,\n  ) => {\n    onFontSizeChanged?.(event.target.value as number);\n  };\n\n  const currentFontId =\n    selectedFont?.id ?? currentFont?.id ?? fonts?.[0]?.id ?? '';\n\n  return (\n    <Card>\n      <Grid container direction={'column'} spacing={2} padding={1}>\n        <Grid>\n          <Typography variant=\"h6\" textAlign={'center'}>\n            Fonts\n          </Typography>\n        </Grid>\n        <Grid>\n          <FormControl>\n            <InputLabel id={TEST_IDS.FONT_LIST_LABEL}>Font</InputLabel>\n            <Select\n              id={TEST_IDS.FONT_LIST}\n              labelId={TEST_IDS.FONT_LIST_LABEL}\n              label=\"Font\"\n              style={{ minWidth: '200px' }}\n              value={currentFontId}\n              onChange={handleFontSelected}\n            >\n              {fonts.map((font) => (\n                <MenuItem key={font.id} value={font.id}>\n                  {font.displayName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid>\n          <TextField\n            id={TEST_IDS.FONT_SIZE_INPUT}\n            label=\"Font Size\"\n            variant=\"outlined\"\n            type=\"number\"\n            value={fontSize}\n            onChange={handleFontSizeChanged}\n          />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n};\n"],"names":["PREDEFINED_FONTS","predefinedFonts","hashString","str","hash","i","char","DEFAULT_FONT_SIZE","buildCssStringForFont","fontName","isBold","isItalic","fontSize","fontString","convertPredefinedFontToFontRegistrationData","predefinedFont","buildFontMetadata","buildFontFace","font","url","metadata","generateIdForFontRegistrationData","fontRegistrationData","displayName","weight","style","hashedDisplayName","dividerClasses","generateUtilityClasses","dividerClasses$1","listItemIconClasses","listItemIconClasses$1","listItemTextClasses","listItemTextClasses$1","getMenuItemUtilityClass","slot","generateUtilityClass","menuItemClasses","menuItemClasses$1","_excluded","overridesResolver","props","styles","ownerState","useUtilityClasses","disabled","dense","divider","disableGutters","selected","classes","composedClasses","composeClasses","_extends","MenuItemRoot","styled","ButtonBase","prop","rootShouldForwardProp","theme","alpha","MenuItem","React.forwardRef","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndexProp","className","other","_objectWithoutPropertiesLoose","context","React.useContext","ListContext","childContext","React.useMemo","menuItemRef","React.useRef","useEnhancedEffect","handleRef","useForkRef","tabIndex","_jsx","clsx","MenuItem$1","TEST_IDS","FontInput","fonts","selectedFont","onFontSelected","onFontSizeChanged","currentFontsById","useMemo","acc","currentFont","setCurrentFont","React","handleFontSelected","useCallback","event","fontId","handleFontSizeChanged","currentFontId","_a","jsx","Card","jsxs","Grid","Typography","FormControl","InputLabel","Select","TextField"],"mappings":"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","x_google_ignoreList":[4,5,6,7,8]}